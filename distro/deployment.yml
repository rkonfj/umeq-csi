# Copyright 2022 rkonfj@fnla.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: umeq-csi
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: umeq-csi
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: external-provisioner-cfg
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csistoragecapacities"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: umeq-csi
    namespace: kube-system
roleRef:
  kind: Role
  name: external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: umeq-csi-plugin
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: umeq-csi-plugin
  template:
    metadata:
      labels:
        name: umeq-csi-plugin
    spec:
      containers:
      - args:
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/umeq-csi.xiaomakai.com/csi.sock
        - --health-port=9809
        image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.5.0
        imagePullPolicy: IfNotPresent
        name: csi-driver-registrar
        ports:
        - containerPort: 9809
          name: healthz
          protocol: TCP
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /registration
          name: registration-dir
      - command:
        - ./plugin
        env:
        - name: CSI_ENDPOINT
          value: /csi/csi.sock
        - name: AGENT_SERVER
          value: http://192.168.3.11:8080
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: tasselsd/umeq-csi:0.0.1
        name: umeq-csi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /csi/
          name: plugin-dir
        - mountPath: /var/lib/kubelet/pods/
          mountPropagation: Bidirectional
          name: pods
        - mountPath: /dev/
          name: dev
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet/plugins/umeq-csi.xiaomakai.com/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet/pods/
          type: Directory
        name: pods
      - hostPath:
          path: /dev/
          type: ""
        name: dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: umeq-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: umeq-csi-controller
  template:
    metadata:
      labels:
        app: umeq-csi-controller
    spec:
      containers:
      - args:
        - --csi-address=/var/lib/csi/sockets/umeq-csi.xiaomakai.com/csi.sock
        - --leader-election
        - --enable-capacity
        - --capacity-ownerref-level=2
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: registry.k8s.io/sig-storage/csi-provisioner:v3.1.0
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/umeq-csi.xiaomakai.com/
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=/var/lib/csi/sockets/umeq-csi.xiaomakai.com/csi.sock
        - --leader-election
        - --http-endpoint=:8080
        env:
        - name: MY_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: registry.k8s.io/sig-storage/csi-attacher:v3.4.0
        name: csi-attacher
        ports:
        - containerPort: 8080
          name: http-endpoint
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/umeq-csi.xiaomakai.com/
          name: socket-dir
      - command:
        - ./plugin
        env:
        - name: CSI_ENDPOINT
          value: /var/lib/csi/sockets/umeq-csi.xiaomakai.com/csi.sock
        - name: AGENT_SERVER
          value: http://192.168.3.11:8080
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: tasselsd/umeq-csi:0.0.1
        name: umeq-csi
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/umeq-csi.xiaomakai.com/
          name: socket-dir
      serviceAccount: umeq-csi
      serviceAccountName: umeq-csi
      volumes:
      - emptyDir: {}
        name: socket-dir
